# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
	xterm-color) color_prompt=yes;;
esac

if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

unset color_prompt force_color_prompt

parse_git_branch() {
	RSLT=''
	GIT_BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' | awk '{print $2}'`
	if [ "$GIT_BRANCH" ]; then
		GIT_STATUS=`git status 2> /dev/null | grep 'working directory clean'`
		CLR=''
		if [ "$GIT_STATUS" ]; then
			CLR=''
		else
			CLR='*'
		fi
		RSLT="‹${GIT_BRANCH}${CLR}›"
	fi
	echo $RSLT
}

export PS1="\[\e[0;36m\]\u@\h\[\e[m\] \[\e[0;34m\]\w\[\e[m\] \[\e[0;33m\]\$(parse_git_branch)\[\e[m\] » "
